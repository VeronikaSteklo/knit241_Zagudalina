package org.knit.solutions;
import org.knit.TaskDescription;
import org.knit.solutions.task20.config.AppConfig;
import org.knit.solutions.task20.security.MasterPasswordHolder;
import org.knit.solutions.task20.service.PasswordService;
import org.knit.solutions.task20.clipboard.ClipboardCleaner;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import java.util.Scanner;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/*
### –ó–∞–¥–∞—á–∞ 20

- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ **Spring Context**,
- **AES-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ** –ø–∞—Ä–æ–ª–µ–π —Å –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª–µ–º (`char[]`),
- –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è **–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞** (–±–µ–∑ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å),
- –≤–æ–∑–º–æ–∂–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–∞ **JavaFX UI**.

---

## üß™ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞: Password Manager —Å Spring –∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º

### üéØ –¶–µ–ª—å —Ä–∞–±–æ—Ç—ã:
–ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º **Spring Framework** –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å–æ —Å–ª–æ–∏—Å—Ç–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π —Å –¥–∞–Ω–Ω—ã–º–∏.

---

### üìå –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ 5 –±–∞–ª–ª–æ–≤:

–†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ **Password Manager**, –∫–æ—Ç–æ—Ä–æ–µ:
- –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–æ–≥–∏–Ω—ã –∏ –ø–∞—Ä–æ–ª–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∞–π—Ç–æ–≤,
- –∏—Å–ø–æ–ª—å–∑—É–µ—Ç **Spring Context** –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏,
- **—à–∏—Ñ—Ä—É–µ—Ç –ø–∞—Ä–æ–ª–∏ —Å –ø–æ–º–æ—â—å—é –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—è**,
- –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ, –∞ –∫–æ–ø–∏—Ä—É–µ—Ç –µ–≥–æ –≤ **–±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ**,
- –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å **—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª** (`JSON`, `XML` –∏–ª–∏ `Serialized`) –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏.
- (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ) –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å JavaFX.

---

## ‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

### ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:

1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å.
2. –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç **–º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å** (–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ).
3. –í—Å–µ –ø–∞—Ä–æ–ª–∏ —à–∏—Ñ—Ä—É—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ **AES** –∏ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—è.
4. –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –∫–æ–º–∞–Ω–¥—ã:
   - `add` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å (—Å–∞–π—Ç, –ª–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å),
   - `list` ‚Äî –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –∏ –ª–æ–≥–∏–Ω–æ–≤ (–±–µ–∑ –ø–∞—Ä–æ–ª–µ–π),
   - `copy <site>` ‚Äî —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å –∏ **—Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞**,
   - `delete <site>` ‚Äî —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Å–∞–π—Ç–∞,
   - `exit` ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É.

---

### üß± –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:

- **model/PasswordEntry.java** ‚Äî –∫–ª–∞—Å—Å —Å –ø–æ–ª—è–º–∏: `site`, `login`, `encryptedPassword`.
- **repository/PasswordRepository** ‚Äî –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å + `InMemoryPasswordRepository` (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç `HashMap`).
- **service/PasswordService** ‚Äî –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ.
- **crypto/EncryptionService** ‚Äî –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å + `AesEncryptionService`.
- **security/MasterPasswordHolder** ‚Äî —Ö—Ä–∞–Ω–∏—Ç –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å –≤ `char[]`.
- **clipboard/ClipboardService** ‚Äî –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å + `SystemClipboardService` (—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä).
- **config/AppConfig.java** ‚Äî –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Spring Context.
- **App.java** ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞, CLI-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫.

---

### üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:

- –ú–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ `char[]` –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å **–æ–±–Ω—É–ª—ë–Ω –≤—Ä—É—á–Ω—É—é** (–≤ `shutdown hook`).
- –ü–∞—Ä–æ–ª–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏ –≤–≤–æ–¥–µ –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–µ.
- –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ `AES/CBC/PKCS5Padding`, –∫–ª—é—á –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏–∑ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ `PBKDF2WithHmacSHA256`.

---

### üß† –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ (–ø–æ –∂–µ–ª–∞–Ω–∏—é):

- –î–æ–±–∞–≤–∏—Ç—å **–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å JavaFX**, –≤ –∫–æ—Ç–æ—Ä–æ–º:
   - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å–∏;
   - —Ç–∞–±–ª–∏—Ü–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ª–æ–≥–∏–Ω—ã –∏ —Å–∞–π—Ç—ã;
   - –∫–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å" –∫–æ–ø–∏—Ä—É–µ—Ç –µ–≥–æ –≤ –±—É—Ñ–µ—Ä (–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç);
   - –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.

---

## üîß –ü–æ–¥—Å–∫–∞–∑–∫–∏

### üì• –ß—Ç–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—è:

```java
System.out.print("–í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å: ");
char[] masterPassword = System.console() != null
        ? System.console().readPassword()
        : scanner.nextLine().toCharArray();
```

---

### üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä:

```java
Toolkit.getDefaultToolkit()
       .getSystemClipboard()
       .setContents(new StringSelection(password), null);
```

---

### üßº –û—á–∏—Å—Ç–∫–∞ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—è –≤ –∫–æ–Ω—Ü–µ:

```java
Runtime.getRuntime().addShutdownHook(new Thread(() -> {
    MasterPasswordHolder holder = context.getBean(MasterPasswordHolder.class);
    holder.clear(); // –æ–±–Ω—É–ª–∏—Ç—å char[] –≤ –ø–∞–º—è—Ç–∏
}));
```

---

## üìÅ –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:

```
PasswordManager/
‚îú‚îÄ‚îÄ App.java
‚îú‚îÄ‚îÄ config/
‚îÇ   ‚îî‚îÄ‚îÄ AppConfig.java
‚îú‚îÄ‚îÄ model/
‚îÇ   ‚îî‚îÄ‚îÄ PasswordEntry.java
‚îú‚îÄ‚îÄ service/
‚îÇ   ‚îî‚îÄ‚îÄ PasswordService.java
‚îú‚îÄ‚îÄ crypto/
‚îÇ   ‚îú‚îÄ‚îÄ EncryptionService.java
‚îÇ   ‚îî‚îÄ‚îÄ AesEncryptionService.java
‚îú‚îÄ‚îÄ security/
‚îÇ   ‚îî‚îÄ‚îÄ MasterPasswordHolder.java
‚îú‚îÄ‚îÄ repository/
‚îÇ   ‚îú‚îÄ‚îÄ PasswordRepository.java
‚îÇ   ‚îî‚îÄ‚îÄ InMemoryPasswordRepository.java
‚îú‚îÄ‚îÄ clipboard/
‚îÇ   ‚îú‚îÄ‚îÄ ClipboardService.java
‚îÇ   ‚îî‚îÄ‚îÄ SystemClipboardService.java
```

---

## üß† –ß—Ç–æ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è:
- –∫–æ—Ä—Ä–µ—Ç–∫–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –Ω–∞ —Å–ª–æ–∏;
- –≥—Ä–∞–º–æ—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Spring –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π;
- –±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ (`char[]`, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ);
- —É–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–º –≤–≤–æ–¥–æ–º, –±—É—Ñ–µ—Ä–æ–º –æ–±–º–µ–Ω–∞;
- (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ JavaFX –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏.



---

### üß© –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º +8 –±–∞–ª–ª–æ–≤)

#### üîç **1. –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** (+2 –±–∞–ª–ª–∞)
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SLF4J + Logback (–∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ª–æ–≥–≥–µ—Ä).
- –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (`add`, `copy`, `delete`, `exit`) –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è.
- –£—Ä–æ–≤–Ω–∏ –ª–æ–≥–æ–≤:
    - `INFO` ‚Äî –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    - `ERROR` ‚Äî –æ—à–∏–±–∫–∏ –∏ —Å–±–æ–∏.

#### üíæ **2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª** (+3 –±–∞–ª–ª–∞)
- –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞, –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö ‚Äî —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
- –§–æ—Ä–º–∞—Ç—ã: JSON, XML –∏–ª–∏ Java Serialization.
- ‚ö†Ô∏è **–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—è**.
  –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ:
    - —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å/—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ JSON;
    - –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –±–∞–π—Ç—ã —á–µ—Ä–µ–∑ AES –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å;
    - –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ‚Äî —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç.
- –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω –∏–∑ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—è (PBKDF2).

#### ‚è±Ô∏è **3. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞** (+3 –±–∞–ª–ª–∞)
- –ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `copy` –ø–∞—Ä–æ–ª—å –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.
- –ß–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ (–∏–ª–∏ –¥—Ä—É–≥–æ–π —É–∫–∞–∑–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª) –±—É—Ñ–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–µ–Ω.
- –û—á–∏—Å—Ç–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ `ScheduledExecutorService` –∏–ª–∏ `CompletableFuture.delayedExecutor`.

---
 */

@TaskDescription(taskNumber = 20, taskDescription = "Password Manager —Å Spring –∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º")
public class Task20 implements Solution{
    private static final Logger logger = LoggerFactory.getLogger(Task20.class);
    @Override
    public void execute() {
        AnnotationConfigApplicationContext context =
                new AnnotationConfigApplicationContext(AppConfig.class);

        System.out.println("–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π\n");

        MasterPasswordHolder masterPasswordService = context.getBean(MasterPasswordHolder.class);

        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            masterPasswordService.clear();
            System.out.println("–ú–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å –æ—á–∏—â–µ–Ω –∏–∑ –ø–∞–º—è—Ç–∏ (–∏–∑ shutdownHook).");
        }));

        PasswordService passwordService = context.getBean(PasswordService.class);

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.print("–ö–æ–º–∞–Ω–¥–∞ (add/list/delete/copy/exit): ");
            String command = scanner.nextLine().trim();
            switch (command) {
                case "add":
                    logger.info("–ö–æ–º–∞–Ω–¥–∞: add");
                    System.out.print("–ò–º—è —Å–µ—Ä–≤–∏—Å–∞: ");
                    String service = scanner.nextLine();
                    System.out.print("–õ–æ–≥–∏–Ω: ");
                    String login = scanner.nextLine();
                    System.out.print("–ü–∞—Ä–æ–ª—å: ");
                    String password = scanner.nextLine();
                    passwordService.addPassword(service, login, password);
                    System.out.println("–ü–∞—Ä–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω.");
                    break;
                case "list":
                    logger.info("–ö–æ–º–∞–Ω–¥–∞: list");
                    passwordService.listPasswords();
                    break;
                case "delete":
                    logger.info("–ö–æ–º–∞–Ω–¥–∞: delete");
                    System.out.print("–ò–º—è —Å–µ—Ä–≤–∏—Å–∞: ");
                    String deleteService = scanner.nextLine();
                    passwordService.deletePassword(deleteService);
                    System.out.println("–£–¥–∞–ª–µ–Ω–æ.");
                    logger.info("–£–¥–∞–ª–µ–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞: {}", deleteService);
                    break;
                case "copy":
                    logger.info("–ö–æ–º–∞–Ω–¥–∞: copy");
                    System.out.print("–ò–º—è —Å–µ—Ä–≤–∏—Å–∞: ");
                    String copyService = scanner.nextLine();
                    passwordService.copyPasswordToClipboard(copyService);
                    logger.info("–ü–∞—Ä–æ–ª—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –¥–ª—è: {}", copyService);
                    break;
                case "exit":
                    logger.info("–ö–æ–º–∞–Ω–¥–∞: exit");
                    System.out.println("–í—ã—Ö–æ–¥...");
                    context.close();
                    return;
                default:
                    logger.info("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: " + command);
                    System.out.println("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.");
            }
        }
    }
}
